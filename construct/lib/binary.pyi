from typing import Any, Mapping as TypingMapping

def integer2bits(number: int, width: int) -> bytes: ...
def integer2bytes(number: int, width: int) -> bytes: ...
def bits2integer(data: bytes, signed: bool = ...) -> int: ...
def bytes2integer(data: bytes, signed: bool = ...) -> int: ...

BYTES2BITS_CACHE: TypingMapping[int, bytes]

def bytes2bits(data: bytes) -> bytes: ...

BITS2BYTES_CACHE: TypingMapping[bytes, bytes]

def bits2bytes(data: bytes) -> bytes: ...
def swapbytes(data: bytes) -> bytes: ...
def swapbytesinbits(data: bytes) -> bytes: ...

SWAPBITSINBYTES_CACHE: TypingMapping[int, bytes]

def swapbitsinbytes(data: bytes) -> bytes: ...
def hexlify(data: bytes) -> str: ...
def unhexlify(data: str) -> bytes: ...
